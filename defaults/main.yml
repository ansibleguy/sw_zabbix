---

force_removal: false  # don't prompt for removal
random_pwd_length: '50'  # must be string-type
tmp_pwd_file_prefix: '/tmp/.ansibleguy.sw_zabbix_'

ZABBIX_HC:  # paths that are 'hardcoded' by zabbix itself
  path_externalscripts: '/usr/lib/zabbix/externalscripts'
  path_alertscripts: '/usr/lib/zabbix/alertscripts'
  path_config: '/etc/zabbix'
  path_run: '/run/zabbix'
  user: 'zabbix'
  group: 'zabbix'
  user_web: 'www-data'
  group_web: 'www-data'
  file_config_agent: '/etc/zabbix/zabbix_agentd.conf'
  file_config_agent2: '/etc/zabbix/zabbix_agent2.conf'
  file_config_proxy: '/etc/zabbix/zabbix_proxy.conf'
  file_config_server: '/etc/zabbix/zabbix_server.conf'
  file_config_php: '/usr/share/zabbix/conf/zabbix.conf.php'  # since the nice path is not working for the setup: '/etc/zabbix/web/zabbix.conf.php'
  file_mysql_proxy: '/usr/share/doc/zabbix-sql-scripts/mysql/schema.sql.gz'
  file_mysql_server: '/usr/share/doc/zabbix-sql-scripts/mysql/create.sql.gz'
  repo_deb:
    1: 'https://repo.zabbix.com/zabbix/'
    # version (p.e. '5.4')
    2: '/debian/pool/main/z/zabbix-release/zabbix-release_'
    # release (p.e. '5.4-1')
    3: "+{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}_all.deb"
  packages:
    agent: ['systemd', 'zabbix-agent']
    agent2: ['systemd', 'zabbix-agent2']
    proxy: ['systemd', 'zabbix-proxy-mysql', 'zabbix-sql-scripts']
    server: ['systemd', 'zabbix-server-mysql', 'zabbix-frontend-php', 'zabbix-sql-scripts', 'zabbix-apache-conf']
    mysql: ['mariadb-client', 'python3-pymysql']
    remove_mariadb: ['mariadb-server']
    remove_nginx: ['nginx']

  service:
    agent: 'zabbix-agent.service'
    agent2: 'zabbix-agent2.service'
    proxy: 'zabbix-proxy.service'
    server: 'zabbix-server.service'

  port:
    passive: 10050
    active: 10051

shared_settings:
  timeout: 10
  logfile_size: 30  # MB

default_zabbix_config:
  version: '5.4'
  release: '5.4-1'  # must exist in zabbix repository; per example: https://repo.zabbix.com/zabbix/5.4/debian/pool/main/z/zabbix-release
  php_version: '7.4'

  state: 'present'

  manage:
    agent: false
    agent2: true
    server: false
    proxy: false
    db: true  # if enabled => will use 'ansibleguy.infra_mariadb' role
    # to install and configure mariadb-database to use with zabbix server and/or proxy
    webserver: true  # if enabled => will use 'ansibleguy.infra_nginx' role to install and configure the needed webserver to use with zabbix server

  path_private: "{{ ZABBIX_HC.path_config }}/private"
  mode_scripts: '0750'  # owner=root, group=zabbix; zabbix should not have write-privileges

  database:
    name: 'zabbix'
    user:
      server_proxy: 'zabbix_service'
      agent: 'zabbix_agent'

    pwd:  # default => random pwd will be generated
      server_proxy: "{{ lookup('password', tmp_pwd_file_prefix + '_ps chars=ascii_letters,digits length=' + random_pwd_length) }}"
      agent: "{{ lookup('password', tmp_pwd_file_prefix + '_agent chars=ascii_letters,digits length=' + random_pwd_length) }}"

    update_password: 'always'  # or 'on_create'
    settings:
      innodb_log_file_size: 1G
      wait_timeout: 600

  server:
    tls_cert_copy: ''  # local tls-certificate to copy to the target system (from 'files/certs'); must be for server-authentication
    tls_key_copy: ''  # local tls-certificate-key to copy to the target system (from 'files/certs'); must be for server-authentication
    tls_ca_copy: ''  # local tls-ca-certificate to copy to the target system (from 'files/certs')
    settings:
      # must be defined manually !!
      # if db is not managed by role:
      #   DBPort:
      #   DBSocket:
      #   DBHost:
      # defaults
      ListenPort: "{{ ZABBIX_HC.port.active }}"
      ListenIP: '0.0.0.0'  # any
      #   SourceIP:
      Timeout: "{{ shared_settings.timeout }}"
      # server
      ProxyDataFrequency: 10
      ProxyConfigFrequency: 300
      #   SSHKeyLocation:
      # logging
      LogType: 'system'
      LogFileSize: "{{ shared_settings.logfile_size }}"
      DebugLevel: 3
      # security
      AllowRoot: 0
      User: "{{ ZABBIX_HC.user }}"
      #   TLSCAFile:
      #   TLSCertFile:
      #   TLSKeyFile:
      StartPollersUnreachable: 20

    php:
      # date.timezone: 'Europe/Vienna'  # if not defined => local timezone will be pulled from client
      max_execution_time: 600
      max_input_time: 600
      memory_limit: '256M'
      post_max_size: '32M'
      upload_max_filesize: '16M'

    php_conf: true
    # if the php-config file should be deployed => /usr/share/zabbix/conf/zabbix.conf.php
    # you might need to add the database config if you manage it by yourself
    php_settings:
      ZBX_SERVER_NAME: 'Monitoring'
      # you could set the php key-value pairs here!

    nginx:  # see: https://github.com/ansibleguy/infra_nginx
      mode: 'proxy'
      proxy:
        ip: '127.0.0.1'
        port: 8080  # may not be 80 and/or 443 !

      ssl:
        mode: 'selfsigned'
        cert:
          cn: 'Zabbix Server'
          org: 'AnsibleGuy'
          email: 'zabbix@template.ansibleguy.net'

      # DO NOT CHANGE
      config_additions:
        - 'location = / {'
        - '  return 301 /zabbix;'
        - '}'
      security:
        restrict_methods: false

      config:
        large_client_header_buffers: '4 16k'

      headers:
        Content-Security-Policy: ''  # not supported

  apache:
    log:
      syslog: true
      path: '/var/log/apache2'

    status_page:
      state: 'present'
      bind: '127.0.0.1'
      port: 8080  # may not be 80 and/or 443 !
      path: 'server-status'

  proxy:
    tls_psk: ''  # tls-psk to add on the target system; must only be containing hexdigits (0-9 & a-f)
    tls_cert_copy: ''  # local tls-certificate to copy to the target system (from 'files/certs'); must be for client-authentication
    tls_key_copy: ''  # local tls-certificate-key to copy to the target system (from 'files/certs'); must be for client-authentication
    tls_ca_copy: ''  # local tls-ca-certificate to copy to the target system (from 'files/certs')
    settings:
      # must be defined manually !!
      Server:
      TLSPSKIdentity:
      # if db is not managed by role:
      #   DBPort:
      #   DBSocket:
      #   DBHost:
      # defaults
      ServerPort: "{{ ZABBIX_HC.port.active }}"
      ListenPort: "{{ ZABBIX_HC.port.active }}"
      ListenIP: '0.0.0.0'  # any
      #   SourceIP:
      Hostname: "{{ ansible_hostname }}"
      Timeout: "{{ shared_settings.timeout }}"
      # proxy
      ConfigFrequency: 300
      # logging
      LogType: 'system'
      LogFileSize: "{{ shared_settings.logfile_size }}"
      DebugLevel: 3
      # security
      EnableRemoteCommands: 0
      AllowRoot: 0
      UnsafeUserParameters: 0
      User: "{{ ZABBIX_HC.user }}"
      TLSConnect: 'psk'  # or cert => you should never use 'unencrypted'
      TLSAccept: 'psk'  # or cert => you should never use 'unencrypted'
      #   TLSCAFile:
      #   TLSCertFile:
      #   TLSKeyFile:

  agent2:  # as the newer agent takes some other settings..
    tls_psk: ''  # tls-psk to add on the target system; must only be containing hexdigits (0-9 & a-f)
    tls_cert_copy: ''  # local tls-certificate to copy to the target system (from 'files/certs'); must be for client-authentication
    tls_key_copy: ''  # local tls-certificate-key to copy to the target system (from 'files/certs'); must be for client-authentication
    tls_ca_copy: ''  # local tls-ca-certificate to copy to the target system (from 'files/certs')
    path_scripts: '/usr/local/sbin/zabbix2'
    path_userparameters: '/etc/zabbix/zabbix_agent2.d'
    settings:
      # must be defined manually !!
      Server:
      TLSPSKIdentity:
      # defaults
      ListenPort: "{{ ZABBIX_HC.port.passive }}"
      ListenIP: '0.0.0.0'  # any
      #   SourceIP:
      Hostname: "{{ ansible_hostname }}"
      Timeout: "{{ shared_settings.timeout }}"
      Include: '/etc/zabbix/zabbix_agent2.d/*.conf'
      ControlSocket: "{{ ZABBIX_HC.path_run }}/agent2.sock"
      # logging
      LogType: 'system'
      LogFileSize: "{{ shared_settings.logfile_size }}"
      DebugLevel: 3
      # security
      Plugins.SystemRun.LogRemoteCommands: 1
      UnsafeUserParameters: 0
      TLSConnect: 'psk'  # or cert => you should never use 'unencrypted'
      TLSAccept: 'psk'  # or cert => you should never use 'unencrypted'
      #   TLSCAFile:
      #   TLSCertFile:
      #   TLSKeyFile:

  agent:
    tls_psk: ''  # tls-psk to add on the target system; must only be containing hexdigits (0-9 & a-f)
    tls_cert_copy: ''  # local tls-certificate to copy to the target system (from 'files/certs'); must be for client-authentication
    tls_key_copy: ''  # local tls-certificate-key to copy to the target system (from 'files/certs'); must be for client-authentication
    tls_ca_copy: ''  # local tls-ca-certificate to copy to the target system (from 'files/certs')
    path_scripts: '/usr/local/sbin/zabbix'
    path_userparameters: '/etc/zabbix/zabbix_agentd.d'
    settings:
      # must be defined manually !!
      Server:
      TLSPSKIdentity:
      # defaults
      ListenPort: "{{ ZABBIX_HC.port.passive }}"
      ListenIP: '0.0.0.0'  # any
      #   SourceIP:
      Hostname: "{{ ansible_hostname }}"
      Timeout: "{{ shared_settings.timeout }}"
      Include: '/etc/zabbix/zabbix_agentd.d/*.conf'
      # logging
      LogType: 'system'
      LogFileSize: "{{ shared_settings.logfile_size }}"
      DebugLevel: 3
      # security
      EnableRemoteCommands: 0
      AllowRoot: 0
      UnsafeUserParameters: 0
      User: "{{ ZABBIX_HC.user }}"
      TLSConnect: 'psk'  # or cert => you should never use 'unencrypted'
      TLSAccept: 'psk'  # or cert => you should never use 'unencrypted'
      #   TLSCAFile:
      #   TLSCertFile:
      #   TLSKeyFile:

ZABBIX_CONFIG: "{{ default_zabbix_config | combine(zabbix, recursive=true) }}"

ZABBIX_MARIADB_INSTANCE: "{{ {
    'dbs': {
      ZABBIX_CONFIG.database.name: {
        'encoding': 'utf8',
        'collation': 'utf8_bin'
      },
    },
    'users': {
      ZABBIX_CONFIG.database.user.server_proxy: {
        'priv': ZABBIX_CONFIG.database.name + '.*:ALL',
        'pwd': ZABBIX_CONFIG.database.pwd.server_proxy,
        'update_pwd': ZABBIX_CONFIG.database.update_password
      },
      ZABBIX_CONFIG.database.user.agent: {
        'priv': '*.*:PROCESS,SHOW DATABASES,BINLOG MONITOR,SHOW VIEW',
        'pwd': ZABBIX_CONFIG.database.pwd.agent,
        'update_pwd': ZABBIX_CONFIG.database.update_password
      },
    },
    'settings': ZABBIX_CONFIG.database.settings,
    'socket': '/run/mysqld/mysqld_zabbix.sock'
  } }}"  # DO NOT CHANGE!

NONE_VALUES: [none, '', ' ']
SETTING_GRAYLIST: ['tls_psk']
