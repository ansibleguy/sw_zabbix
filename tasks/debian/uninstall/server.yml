---

- name: Zabbix | Uninstall | Server | Disabling service
  ansible.builtin.systemd:
    name: "{{ ZABBIX_HC.service.server }}"
    state: stopped
    enabled: false
  register: zbx_srv_disable
  failed_when:
    - zbx_srv_disable.failed
    - "'does not exist' not in zbx_srv_disable.msg"
    - "'Could not find' not in zbx_srv_disable.msg"

- name: Zabbix | Uninstall | Server | Removing packages
  ansible.builtin.apt:
    name: "{{ ZABBIX_HC.packages.server }}"
    state: absent
    purge: true

- name: Zabbix | Uninstall | Server | Removing files
  ansible.builtin.file:
    dest: "{{ item }}"
    state: absent
  loop:
    - "{{ ZABBIX_HC.file_config_server }}"
    - "{{ ZABBIX_CONFIG.path_private }}/server_ca.crt"
    - "{{ ZABBIX_CONFIG.path_private }}/server_cert.crt"
    - "{{ ZABBIX_CONFIG.path_private }}/server_cert.key"

- name: Zabbix | Uninstall | Server | Ask user
  ansible.builtin.pause:
    prompt: "Do you want to remove the scripts directories? ({{ ZABBIX_HC.path_externalscripts }}, {{ ZABBIX_HC.path_alertscripts }}) [yes/NO]!"
  register: zbx_server_removal_prompt
  when: not force_removal

- name: Zabbix | Uninstall | Server | Removing directories
  ansible.builtin.file:
    dest: "{{ item }}"
    state: absent
    force: true
  loop:
    - "{{ ZABBIX_HC.path_externalscripts }}"
    - "{{ ZABBIX_HC.path_alertscripts }}"
  when: >
    force_removal or
    zbx_server_removal_prompt.user_input == 'yes'

- name: Zabbix | Uninstall | Server | Database tasks
  ansible.builtin.import_tasks: db.yml

- name: Zabbix | Uninstall | Server | Ask user (MariaDB)
  ansible.builtin.pause:
    prompt: "Do you want to uninstall the MariaDB database completely? [yes/NO]!"
  register: zbx_mariadb_removal_prompt
  when:
    - not force_removal
    - "'mariadb-server' in ansible_facts.packages"

- name: Zabbix | Uninstall | Server | Removing packages
  ansible.builtin.apt:
    name: "{{ ZABBIX_HC.packages.remove_mariadb + ZABBIX_HC.packages.mysql }}"
    state: absent
    purge: true
  when:
    - "'mariadb-server' in ansible_facts.packages"
    - force_removal or zbx_mariadb_removal_prompt.user_input == 'yes'

- name: Zabbix | Uninstall | Server | Removing Nginx webserver config
  ansible.builtin.include_role:
    name: ansibleguy.infra_nginx
  vars:
    nginx:
      sites:
        zabbix: "{{ ZABBIX_CONFIG.server.nginx | combine({'state': 'absent'}) }}"
  when:
    - ZABBIX_CONFIG.manage.webserver | bool
    - "'nginx' in ansible_facts.packages"
  tags: [install, server]
  args:
    apply:
      tags: [install, server]

- name: Zabbix | Uninstall | Server | Ask user (Nginx)
  ansible.builtin.pause:
    prompt: "Do you want to uninstall the NGINX web server completely? [yes/NO]!"
  register: zbx_nginx_removal_prompt
  when:
    - not force_removal
    - "'nginx' in ansible_facts.packages"

- name: Zabbix | Uninstall | Server | Disabling nginx service
  ansible.builtin.systemd:
    name: 'nginx.service'
    state: stopped
    enabled: false
  when:
    - "'nginx' in ansible_facts.packages"
    - force_removal or zbx_nginx_removal_prompt.user_input == 'yes'
  register: zbx_nginx_disable
  failed_when:
    - zbx_nginx_disable.failed
    - "'does not exist' not in zbx_nginx_disable.msg"
    - "'Could not find' not in zbx_nginx_disable.msg"

- name: Zabbix | Uninstall | Server | Removing nginx package
  ansible.builtin.apt:
    name: "{{ ZABBIX_HC.packages.remove_nginx }}"
    state: absent
    purge: true
  when:
    - "'nginx' in ansible_facts.packages"
    - force_removal or zbx_nginx_removal_prompt.user_input == 'yes'
