---

- name: "Zabbix | Agent V{{ vers }} | Uninstalling"
  ansible.builtin.include_tasks: uninstall/agent1.yml
  when: >
    (ZABBIX_CONFIG.state != 'present' or
    not ZABBIX_CONFIG.manage.agent1 | bool) and
    ZABBIX_HC.packages.agent1 in ansible_facts.packages
  tags: [uninstall, agent]
  args:
    apply:
      tags: [uninstall, agent]

- name: "Zabbix | Agent V{{ vers }} | Uninstalling Agent2"
  ansible.builtin.include_tasks: uninstall/agent2.yml
  when: >
    (ZABBIX_CONFIG.state != 'present' or
    not ZABBIX_CONFIG.manage.agent2 | bool or
    ZABBIX_CONFIG.manage.agent1 | bool) and
    ZABBIX_HC.packages.agent2 in ansible_facts.packages
  tags: [uninstall, agent]
  args:
    apply:
      tags: [uninstall, agent]

- name: "Zabbix | Agent V{{ vers }} | Verifying config"
  ansible.builtin.fail:
    msg: "Not all needed settings were provided! Zabbix-Agent cannot be configured!
    We need: 'Server', 'TLSPSKIdentity or TLSCertFile', 'tls_psk (longer than {{ ZABBIX_HC.psk_min_length }} characters) or TLSKeyFile'!
    Also: unencrypted connections are not supported by this role!"
  when: >
    ZABBIX_CONFIG.state == 'present' and (
      agent.settings.Server in NONE_VALUES or (
        agent.settings.TLSPSKIdentity in NONE_VALUES and
        agent.settings.TLSCertFile in NONE_VALUES
      ) or (
        agent.tls_psk in NONE_VALUES and (
          agent.tls_cert_copy in NONE_VALUES or
          agent.tls_key_copy in NONE_VALUES or
          agent.tls_ca_copy in NONE_VALUES
        )
      ) or (
        agent.settings.TLSConnect == 'unencrypted' or
        agent.settings.TLSAccept == 'unencrypted'
      ) or (
        agent.tls_psk | zabbix_psk_hex | length < ZABBIX_HC.psk_min_length
      )
    )
  tags: [config, install, agent]

- name: "Zabbix | Agent V{{ vers }} | Installing"
  ansible.builtin.include_tasks: install/agent1.yml
  when:
    - ZABBIX_CONFIG.state == 'present'
    - vers == 1
  tags: [install, agent]
  args:
    apply:
      tags: [install, agent]

- name: "Zabbix | Agent V{{ vers }} | Configuring"
  ansible.builtin.include_tasks: configure/agent1.yml
  tags: [config, install, agent]
  args:
    apply:
      tags: [config, install, agent]
  when:
    - ZABBIX_CONFIG.state == 'present'
    - vers == 1

- name: "Zabbix | Agent V{{ vers }} | Installing Agent2"
  ansible.builtin.include_tasks: install/agent2.yml
  tags: [install, agent]
  args:
    apply:
      tags: [install, agent]
  when:
    - ZABBIX_CONFIG.state == 'present'
    - vers == 2

- name: "Zabbix | Agent V{{ vers }} | Configuring Agent2"
  ansible.builtin.include_tasks: configure/agent2.yml
  tags: [config, install, agent]
  args:
    apply:
      tags: [config, install, agent]
  when:
    - ZABBIX_CONFIG.state == 'present'
    - vers == 2
